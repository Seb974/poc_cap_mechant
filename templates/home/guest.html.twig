{% extends 'base.html.twig' %}

{% block title %}Hello HomeController!{% endblock %}

{% block body %}

    <style>
        .article-wrapper
        {
            margin: 0.5em auto;
            width: 100%;
            font: 18px / 1.5 sans-serif;
        }
    </style>

    <div class="article-wrapper">
        <section class="p-t-30">
            <div class="category-section">
                <label for="cat-select" id="cat-label">Catégorie</label>

                <select name="categories" id="cat-select">
                    <option value="-1" selected>Tous</option>
                    {% for category in categories %}
                        <option class="categories" value="{{ category.id }}" id="category-{{ category.id }}">{{ category.name }}</option>
                    {% endfor %}
                </select>
            </div>
            <div class="container article-section">
                <div class="row">
                    {% for article in articles %}
                        <div class="col-12 col-sm-6 col-md-4 articles cat-{{ article.category.id }}">
                            <div class="card card-lg">
                                <div class="card-img">
                                    <a href="{{ path('article_show', { id: article.id }) }}">
                                        {% if article.picture is not null %}
                                            <img src="{{ asset('uploads/pictures/' ~ article.picture) }}" class="card-img-top" alt="{{ article.picture }}">
                                        {% endif %}
                                    </a>
                                </div>
                                <div class="card-block">
                                    <ul>
                                        <li>
                                            <a href="{{ path('article_show', { id: article.id }) }}">
                                                {{ article.name }}
                                            </a>
                                        </li>
                                        <li>
                                            {{ article.description }}
                                        </li>
                                    </ul>
                                    <hr/>
                                    <ul>
                                        <li>
                                            Quantité : 
                                            <input class="inputQty" id="input-{{ article.id }}" type="number" value="0" min="0"/>
                                        </li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    {% endfor %}
                </div>
            </div>
         
            <div class="container">
                <button type="submit" class="btn btn-primary btn-lg btn-block" id="submitButton">
                    <i class="fas fa-shopping-cart"></i> Ajouter
                </button>
            </div>
        </section>
    </div>


    {# <!-- jQuery --> #}
    <script src="https://code.jquery.com/jquery-3.4.1.js" integrity="sha256-WpOohJOqMqqyKL9FccASB9O0KwACQJpFTUBLTYOVvVU=" crossorigin="anonymous"></script>
    
    {# <!-- Gestion du collapse --> #}
    <script type="text/javascript">
        $(function () {
            let articleCategories = $('#accordionExample');
            articleCategories.on('show.bs.collapse','.collapse', function() {
                articleCategories.find('.collapse.in').collapse('hide');
            });
        });
    </script>

    {# <!-- Filtre des articles --> #}
    <script type="text/javascript">
        let articles = document.getElementsByClassName("articles");
        let names = document.getElementsByClassName("names");
        let catSelection = document.getElementById("cat-select");
        catSelection.addEventListener("change", filterArticles);

        function filterArticles(event) {
            event.preventDefault();
            let catId = parseInt(event.target.value);
            selectedArticles = document.getElementsByClassName("cat-" + catId);
            console.log(selectedArticles);
            if (catId === -1) {
                for (let i = 0; i < articles.length; i++) {
                    articles[i].hidden = false;
                }
            } else {
                for (let i = 0; i < articles.length; i++) {
                    articles[i].hidden = true;
                }
                for (let j = 0; j < selectedArticles.length; j++) {
                    selectedArticles[j].hidden = false;
                }
            }
        }
    </script>

    {#<!-- Gestion du panier -->#}
    <script type="text/javascript">
        let count = 0;
        let button = document.getElementById("submitButton");
        let inputs = document.getElementsByClassName("inputQty");
        let cartList = document.getElementById("cartList");
        let totalItems = document.getElementById("itemCount");
        let counter = document.getElementById("count");
        let validate = document.getElementById("validate");

        validate.hidden = true;
        validate.addEventListener("click", validateCommand);

        /*for (let i = 0; i < inputs.length; i++) {
            inputs[i].addEventListener('focusout', addToCart);
        }*/

        button.addEventListener("click", addToCart);

        function addToCart(event) {
            event.preventDefault();
            for (let i = 0; i < inputs.length; i++) {
                let qty = parseInt(inputs[i].value);
                if (qty > 0) {
                    let id = parseInt(inputs[i].id.substring(6));
                    let inputItem = document.getElementById("itemQty-" + id);
                    updateBadge(qty);
                    inputItem === null ? addArticleToList(id, qty) : addToItem(inputItem.id, qty);
                    inputs[i].value = 0;
                }
            }
        }

        /*function addToCart(event) {
            event.preventDefault();
            let qty = parseInt(event.target.value);
            if (qty > 0) {
                let id = parseInt(event.target.id.substring(6));
                let inputItem = document.getElementById("itemQty-" + id);
                updateBadge(qty);
                inputItem === null ? addArticleToList(id, qty) : addToItem(inputItem.id, qty);
                event.target.value = 0;
            }
        }*/

        function updateBadge(qty) {
            count += qty;
            counter.textContent = count;
            validate.hidden = count > 0 ? false : true;
            count > 0 ? counter.style.visibility = "visible" : counter.style.visibility = "hidden";
            count > 1 ? totalItems.textContent = count + " articles" : totalItems.textContent = count + " article";
        }

        function addToItem(inputId, qty) {
            let inputToUpdate = document.getElementById(inputId);
            let initialValue = parseInt(inputToUpdate.value);
            inputToUpdate.value = initialValue + qty;
            inputToUpdate.defaultValue = initialValue + qty;
        }

        function addArticleToList(id, qty) {
            let cartList = document.getElementById("cartList");
            let description = document.getElementById("name-" + id).textContent;
            let newArticle = document.createElement("li");
            let newDescription = document.createElement("p");
            let newForm = createForm(id, qty);
            newArticle.setAttribute("id", "cartItem-" + id);
            newDescription.setAttribute("class", "d-flex flex-row ml-auto");
            newDescription.textContent = description;
            newArticle.append(newDescription);
            newArticle.append(newForm);
            cartList.append(newArticle);
        }

        function createForm(id, qty) {
            let div = document.createElement("div");
            let input = document.createElement("input");
            let button = document.createElement("button");
            let trash = document.createElement("i");
            input.setAttribute("class", "items");
            input.setAttribute("id", "itemQty-" + id);
            input.setAttribute("type","number");
            input.setAttribute("defaultValue", qty);
            input.setAttribute("value", qty);
            input.setAttribute("min", "1");
            input.addEventListener("change", updateQty)
            button.setAttribute("class", "btn btn-link");
            button.setAttribute("id", "throw-" + id)
            button.addEventListener("click", deleteArticle);
            trash.setAttribute("class", "fa fa-trash");
            trash.setAttribute("id","trash-" + id)
            trash.addEventListener("click", deleteArticle);
            button.append(trash);
            div.append(input);
            div.append(button);
            div.append(document.createElement("hr"));
            return div;
        }

        function deleteArticle(event) {
            event.preventDefault();
            let articleId = parseInt(event.target.id.substring(6));
            let articleQty = document.getElementById("itemQty-" + articleId);
            let article = document.getElementById("cartItem-" + articleId);
            article.remove();
            updateBadge(-parseInt(articleQty.value));
        }

        function updateQty(event) {
            event.preventDefault();
            let initialQty = parseInt(event.target.defaultValue);
            let newQty = parseInt(event.target.value);
            updateBadge(newQty - initialQty);
            event.target.defaultValue = event.target.value;
        }

        async function validateCommand(event) {
            event.preventDefault();
            let items = document.getElementsByClassName("items");
            await sendItemsToDatabase(items);
            document.location.href='/cart/item/'
        }

        async function sendItemsToDatabase(items) {
            for (let i = 0; i < items.length; i++) {
                let itemId = parseInt(items[i].id.substring(8));
                cartItem = {
                    article: itemId,
                    quantity: parseInt(items[i].value),
                }
                $.ajax({
                    type: 'POST',
                    url: '/cart/item/new',
                    headers: {
                        'Content-Type':'application/json',
                    },
                    data: JSON.stringify(cartItem),
                });
            }
        } 
    </script>
{% endblock %}

{% block js %}
{% endblock %}


